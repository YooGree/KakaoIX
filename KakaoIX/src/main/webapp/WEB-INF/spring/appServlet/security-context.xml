<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/*"	access="permitAll()" />
 		<intercept-url pattern="/product/history" access="hasAnyRole('ROLE_SYSTEM', 'ROLE_USER')" /> 
		<intercept-url pattern="/product/product" access="hasAnyRole('ROLE_SYSTEM', 'ROLE_USER')" />

		 <!-- return boolean -->
		<form-login login-page="/login"
					default-target-url="/"	
					login-processing-url="/j_spring_security_check"
					authentication-failure-url="/login?fail=true" 
					username-parameter="email" 
					password-parameter="password" />		


		<logout logout-success-url="/" logout-url="/j_spring_security_logout" 
				invalidate-session="true" delete-cookies="JSESSIONID"/>
		<csrf disabled="true"/>	 
	</http>
	
	<authentication-manager>
		<authentication-provider>
<!-- 			 <user-service>
 				<user name="user@aa" password="user" authorities="ROLE_USER" />
			</user-service> -->
	 		<jdbc-user-service data-source-ref="dataSource"	
						users-by-username-query="SELECT MEMBER_ID as username, MEMBER_PASS as password, 1 as enabled 
												FROM MEMBER 
												WHERE MEMBER_ID = ?"
						authorities-by-username-query="SELECT MEMBER_ID as username, MEMBER_AUT as authority	
													  FROM MEMBER
													  WHERE MEMBER_ID = ?"/>
		</authentication-provider>
	</authentication-manager>
</beans:beans>